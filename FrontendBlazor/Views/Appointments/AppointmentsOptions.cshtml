@model IEnumerable<FrontendBlazor.Models.AppointmentDay>

@{
    ViewBag.Title = "Citas";
    Layout = "~/Views/Shared/FrontPageLayout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">

<style>
    .day {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        margin: 10px;
        background-color: #f9f9f9;
        text-align: center;
        height: 400px; /* Fixed height */
    }

    .datelabel {
        font-size: 16px;
        margin-bottom: 10px;
    }

    .column-appointment-spaces {
        overflow-y: auto;
        max-height: 320px;
    }

    .timeslot {
        background-color: #007bff;
        color: white;
        padding: 5px;
        margin: 5px 0;
        border-radius: 5px;
        cursor: pointer;
    }

        .timeslot:hover {
            background-color: #0056b3;
        }

    .carousel-inner {
        margin: 0 auto;
    }

    .carousel-control {
        background-image: none;
    }

    .modal-header {
        background-color: #007bff;
        color: white;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .modal-body {
        padding: 10px;
    }

    .modal-footer {
        padding: 10px 10px;
    }

    .form-group label {
        font-size: 16px;
        font-weight: bold;
        color: #333;
    }

    .form-control::placeholder {
        color: #999;
        font-size: 14px; /* Aumentar tamaño del texto del placeholder */
        font-weight: bold; /* Hacer el texto del placeholder negrita */
    }

    .form-control {
        font-size: 14px;
        font-weight:bold;
        border-radius: 5px;
        border: 1px solid #ced4da;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
        }

        .form-control::placeholder {
            color: #999;
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }
        .introduction{
            font-size:16px;
            font-weight:300;
        }

   
</style>

<section class="wpb_row row-fluid section-padd">
  
    <div class="container">
        <p class="introduction">
            Solicite su cita agendando un espacio en algunos de nuestros horarios disponibles, en caso de que lo vea nesesario tambien puede contactar directamente al correo,
            numero telefonico y whatsapp adjuntado al inicio de esta pagina.
        </p>
        <div class="container">
           
        </div>
        <div id="appointmentCarousel" class="carousel carousel-dark " data-interval="false" data-ride="carousel">
            <div class="carousel-inner" role="listbox">
                @for (int i = 0; i < Model.Count(); i += 4)
                {
                    var chunk = Model.Skip(i).Take(4).ToList();
                    <div class=" carousel-item item @(i == 0 ? "active" : "")">
                        <div class="row justify-content-center align-items-center">
                            @foreach (var day in chunk)
                            {
                                @if (day.Date != null)
                                {
                                    <div class="col-md-2 day">
                                        <div class="datelabel">
                                            <strong>@day.DayText</strong>
                                            @day.Date.Value.ToString("MMM") @day.Date.Value.Day
                                        </div>
                                        <div class="column-appointment-spaces">
                                            @foreach (var hour in day.Hours)
                                            {
                                                <div class="timeslot" data-bs-toggle="modal" data-bs-target="#exampleModal" data-date="@day.Date.Value.ToString("yyyy-MM-dd")" data-hour="@hour.hour">
                                                    @hour.textHour
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
            <!-- Controls -->
            <button class="carousel-control-prev" type="button" data-bs-target="#appointmentCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#appointmentCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</section>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog modal-dialog-centered  modal-md">
        <div class="modal-content">
            <div class="modal-header row m-3">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="btn-close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title fs-5" id="exampleModalLabel">Solicitar cita</h4>
            </div>
            <div class="modal-body">

                <div class="modal-body">
                    <form id="appointmentForm" method="post">
                        <input type="hidden" id="date" name="AppointmentDate" />
                        <input type="hidden" id="hour" name="AppointmentHour" />
                        <div class="form-group mb-3">
                            <label for="clientMail" class="col-form-label">Correo:</label>
                            <input type="email" class="form-control" id="clientMail" name="ClientMail" placeholder="Ingresa tu correo">
                           
                        </div>
                        <div class="form-group mb-3">
                            <label for="clientCell" class="col-form-label">Teléfono:</label>
                            <input type="tel" class="form-control" id="clientCell" name="ClientCell" placeholder="Ingresa tu teléfono" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"  maxlength="8">
                            <div id="cellFeedback" class="form-text" style="color:red; font-size:12px; display:none" >El teléfono debe tener 8 dígitos.</div>
                        </div>
                        <div class="form-group mb-3">
                            <label for="clientCell" class="col-form-label">Donde prefieres que nos veamos:</label>
                            <div> <p style="font-size:15px; font-weight:200">  Elija uno o puede elegir la opcion "Otro" y dejar una sugerencia </p></div>
                            <select name="Place" id="place-select" style="font-size: 15px;">
                                <option selected value="">--Elija el lugar que desee--</option>
                                <option value="Oficina del Ins"> Oficina del Ins </option>
                                <option value="Oficina Personal"> Oficina Personal </option>
                                <option value="Llamada telefonica"> Llamada Telefonica</option>
                                <option value="Otro"> Otro </option>
                            </select>

                        </div>
                        <div class="form-group mb-3" style="display:none;" id="other-place-group">
                            <label for="other-place" class="col-form-label">Por favor, indique el lugar:</label>
                            <input type="text" id="other-place" name="other-place" class="form-control">
                        </div>
                        <div class="form-group mb-3">
                            <label for="message-text" class="col-form-label">Comentario (opcional):</label>
                            <textarea class="form-control" name="Comment" id="message-text" rows="3" placeholder="Deja tu comentario" style="min-height:80px; max-height:240px;"></textarea>
                        </div>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button data-bs-dismiss="modal" type="button" id="conf-appo" class="btn btn-primary">Confirmar</button>
            </div>
        </div>

    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>

    document.getElementById('place-select').addEventListener('change', function () {
        var otherPlaceGroup = document.getElementById('other-place-group');
        if (this.value === 'Otro') {
            otherPlaceGroup.style.display = 'block';
        } else {
            otherPlaceGroup.style.display = 'none';
        }
    });


    $(document).ready(function () {
        $('.timeslot').on('click', function () {
            //var button = $(event.relatedTarget); // Button that triggered the modal
            var date = $(this).data('date')// Extract date from data-* attributes
            var hour = $(this).data('hour'); // Extract hour from data-* attributes
            
            const month = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];
            //            const weekday = ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"];


            console.log(date);
            console.log(hour);
            var dateform = new Date(date);
            // Update hidden fields in the modal with the appointment date and hour
            var modal = $("#exampleModal");
            modal.find('#date').val(date);
            modal.find('#hour').val(hour);
            modal.find('.modal-title').text('Solicitar cita para el ' + dateform.getUTCDate() + ' de ' + month[dateform.getMonth()] + ' del ' + dateform.getFullYear() + ' a las '+ hour);
        });

        $('#clientCell').on("change", function () {
            var cell = $('#clientCell').text();
            console.log(cell);
            if (cell.length != 8) {
                $("#cellFeedback").style.display = 'block';
                $('#conf-appo').prop('disabled', true);

            } else {
                $("#cellFeedback").style.display = 'none';
                $('#conf-appo').prop('disabled', false);
            }
        });

        $('#conf-appo').on('click', function () {
            var date = $('#date').val();
            var hour = $('#hour').val();
            var clientMail = $('#clientMail').val();
            var clientCell = $('#clientCell').val();
            var Comment = $('#message-text').val();
            var placeSelected = $('#place-select').val();
            var otherPlace = $('#other-place').val();
            var Place = placeSelected;
            if (placeSelected === 'Otro') {
                Place = otherPlace;
                
            }else{
                Place = placeSelected;
            }



            $.ajax({
                url: '@Url.Action("CreateAppointment", "Appointments")',
                type: 'POST',
                data: {
                    date: date,
                    hour: hour,
                    clientMail: clientMail,
                    clientCell: clientCell,
                    Comment: Comment,
                    Place : Place
                },
                success: function (response) {
                    Swal.fire({
                        title: "Éxito",
                        text: "Su cita se ha registrado, recuerde revisar el correo para confirmar su cita",
                        icon: "success",
                        allowOutsideClick: false,
                        confirmButtonText: "Ok, lo he entendido"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/AppointmentsOptions';
                        }
                    });
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: "Error",
                        text: "Hubo un problema al registrar su cita. Inténtelo de nuevo.",
                        icon: "error",
                        allowOutsideClick: false
                    });
                }
            });
        });
    });
</script> 
@* <script>
    $(document).ready(function () {
        $('#conf-appo').click(function (event) {
            event.preventDefault(); // Evita cualquier comportamiento predeterminado del botón

            $.ajax({
                type: 'POST',
                url: '/Email/SendEmail',
                data: $('#appointmentForm').serialize(), // Serializa el formulario para enviar los datos
                success: function (response) {
                    if (response.success) {
                        //alert('Correo enviado con éxito.');
                        // Aquí puedes cerrar el modal o realizar cualquier otra acción necesaria
                        $('#appointmentForm')[0].reset(); // Opcional: limpiar el formulario
                        $('.modal').modal('hide'); // Opcional: cerrar el modal
                    } else {
                        alert('Error: ' + response.errorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error al enviar el formulario: ' + error);
                }
            });
        });
    });
</script>*@
<script>
    $(document).ready(function () {
        $('#place-select').change(function () {
            if ($(this).val() === 'Otro') {
                $('#other-place-group').show();
            } else {
                $('#other-place-group').hide();
            }
        });

        $('#conf-appo').click(function (event) {
            event.preventDefault();

            // Asegurarse de agregar el valor del campo "Otro lugar" si está visible
            if ($('#place-select').val() === 'Otro') {
                $('#appointmentForm').append('<input type="hidden" name="Place" value="' + $('#other-place').val() + '">');
            }

            $.ajax({
                type: 'POST',
                url: '/Email/SendEmail',
                data: $('#appointmentForm').serialize(),
                success: function (response) {
                    if (response.success) {
                        $('#appointmentForm')[0].reset();
                        $('.modal').modal('hide');
                    } else {
                        alert('Error: ' + response.errorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error al enviar el formulario: ' + error);
                }
            });
        });
    });
</script>
